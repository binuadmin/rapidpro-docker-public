version: "3"

services:
  db:
    image: postgis/postgis:14-3.3
    restart: unless-stopped
    environment:
      - POSTGRES_USER=rapidpro
      - POSTGRES_PASSWORD=ayXVXnIl4MHQtdGXI2U
      - POSTGRES_DB=rapidpro
    networks:
      - overlay
    volumes:
      - ./docker-compose/db/schema/:/docker-entrypoint-initdb.d:ro
      - db:/var/lib/postgresql/data

  elastic:
    image: elasticsearch:7.17.6
    restart: unless-stopped
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms2g -Xmx2g"
      # Disables SSL and authentication in v8
      #xpack.security.enabled: false
    mem_limit: 3g
    networks:
      - overlay
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic:/usr/share/elasticsearch/data

  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - overlay

  mailroom:
    build:
      context: mailroom/
      args:
        VERSION: 7.4.1
    restart: unless-stopped
    networks:
      - overlay
    depends_on:
      - db
      - redis
      - elastic
    #command: "-log-level debug"
    environment:
      # More options at https://github.com/nyaruka/mailroom and docker-compose exec mailroom mailroom --help
      MAILROOM_DB: "postgres://rapidpro:ayXVXnIl4MHQtdGXI2U@db/rapidpro?sslmode=disable"
      MAILROOM_AUTH_TOKEN: NwfAX3wRaiSksSdG45
      MAILROOM_REDIS: redis://redis:6379/15
      MAILROOM_ELASTIC: http://elastic:9200
      MAILROOM_ADDRESS: 0.0.0.0

      MAILROOM_SENTRY_DSN:
      # TODO: Update to the proper domain
      MAILROOM_DOMAIN: example.com

  courier:
    build:
      context: courier/
      args:
        VERSION: 7.4.0
    restart: unless-stopped
    networks:
      - overlay
    depends_on:
      - db
      - redis
    environment:
      # More options at https://github.com/nyaruka/courier and docker-compose exec courier courier --help
      COURIER_DB: "postgres://rapidpro:ayXVXnIl4MHQtdGXI2U@db/rapidpro?sslmode=disable"
      COURIER_REDIS: redis://redis:6379/15
      COURIER_SPOOL_DIR: /spool
      COURIER_ADDRESS: 0.0.0.0
      COURIER_SENTRY_DSN:
      #COURIER_DOMAIN:
    volumes:
      - courier:/spool

  rp-indexer:
    build:
      context: rp-indexer/
      args:
        VERSION: 7.4.0
    restart: unless-stopped
    networks:
      - overlay
    depends_on:
      - db
      - elastic
    environment:
      # More options at https://github.com/nyaruka/rp-indexer and docker-compose exec rp-indexer rp-indexer --help
      INDEXER_DB: "postgres://rapidpro:ayXVXnIl4MHQtdGXI2U@db/rapidpro?sslmode=disable"
      INDEXER_ELASTIC_URL: http://elastic:9200
      INDEXER_SENTRY_DSN: 

  #rp-archiver:
  #  build:
  #    context: rp-archiver/
  #    args:
  #      VERSION: 7.4.0
  #  restart: unless-stopped
  #  networks:
  #    - overlay
  #  depends_on:
  #    - db
  #  environment:
  #    # More options at https://github.com/nyaruka/rp-indexer and docker-compose exec rp-indexer rp-indexer --help
  #    ARCHIVER_DB: "postgres://rapidpro:ayXVXnIl4MHQtdGXI2U@db/rapidpro?sslmode=disable"
  #    ARCHIVER_S3_REGION:

  rapidpro:
    build:
      context: rapidpro/
      args:
        VERSION: 7.4.2
    #image: rapidpro:7.4.2
    restart: unless-stopped
    networks:
      - overlay
    volumes:
      - ./docker-compose/rapidpro/conf/settings.py:/rapidpro/temba/settings.py:ro
      # If you want to specify a custom brand
      #- ./docker-compose/rapidpro/brands/moya/:/rapidpro/static/brands/moya/:ro
      - sitestatic:/rapidpro/sitestatic/
      - media:/rapidpro/media/orgs/
    depends_on:
      - db
      - redis
      - elastic
      - mailroom
      - courier
      - rp-indexer
      #- rp-archiver
    env_file: rapidpro.env

  celery:
    #image: rapidpro:7.4.2
    build:
      context: rapidpro/
      args:
        VERSION: 7.4.2
    restart: unless-stopped
    depends_on:
      - rapidpro
    volumes:
      - ./docker-compose/rapidpro/conf/settings.py:/rapidpro/temba/settings.py:ro
      # If you want to specify a custom brand
      #- ./docker-compose/rapidpro/brands/moya/:/rapidpro/static/brands/moya/:ro
      - media:/rapidpro/media/orgs/
    env_file: rapidpro.env
    command: ["poetry", "run", "celery", "-A", "temba", "worker", "--beat", "-l", "info", "-Q", "flows,msgs,handler,celery", "-c", "2"]
    networks:
      - overlay

  nginx:
    image: nginx:1.23.1
    restart: unless-stopped
    depends_on:
      - rapidpro
    networks:
      - overlay
    volumes:
      - ./docker-compose/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - sitestatic:/var/www/rapidpro/sitestatic/:ro
    ports:
      - 80:8080

volumes:
  db:
    driver: local
  elastic:
    driver: local
  courier:
    driver: local
  sitestatic:
    driver: local
  media:
    driver: local

networks:
  overlay:
